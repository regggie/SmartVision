<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.atithi</groupId>
  <artifactId>ImageManager</artifactId>
  <packaging>war</packaging>
  <version>0.0.1-SNAPSHOT</version>
  <name>ImageManager Maven Webapp</name>
  <url>http://maven.apache.org</url>
  <properties>
  	<cxf.version>3.0.3</cxf.version>
  	<httpclient.version>3.1</httpclient.version>
  	<jax.ws.rs>2.0.1</jax.ws.rs>
  	<springmvc>4.1.4.RELEASE</springmvc>
  	<jackson.version>1.1.1</jackson.version>
  	<smack.version>4.1.3</smack.version>
  </properties>
  <dependencies>
    <!--added to remove index.jsp page error -->
    <dependency>
    	<groupId>javax.servlet</groupId>
    	<artifactId>javax.servlet-api</artifactId>
    	<version>3.1.0</version>
    	<scope>provided</scope>
	</dependency>
	<!--SpringFramework Dependencies -->
	<!--1. spring-context for cxf.xml file-->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${springmvc}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${springmvc}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${springmvc}</version>
		</dependency>
		
	<!--2. Apache CXF specific Dependencies -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>${httpclient.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>${jax.ws.rs}</version>
		</dependency>
		
		<!--Jackson Dependency-->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-jaxrs</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		
		<dependency>
			<groupId>jivesoftware</groupId>
			<artifactId>smackx</artifactId>
			<version>3.1.0</version>
		</dependency>
		
		<dependency>
		<groupId>com.googlecode.json-simple</groupId>
		<artifactId>json-simple</artifactId>
		<version>1.1</version>
	</dependency>
	
	    <dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-core</artifactId>
			<version>${smack.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>org.igniterealtime.smack</groupId>
			<artifactId>smack-core</artifactId>
			<version>${smack.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
		<groupId>org.igniterealtime.smack</groupId>
		<artifactId>smack-tcp</artifactId>
		<version>4.1.6</version>
		</dependency>
		
		<!-- Oracle JAR -->
		<!-- 1. download  jar 2. install:install-file -Dfile=E:\Relive_Cdac\Workspace_Mars\ojdbc6.jar -DgroupId=com.oracle -DartifactId=ojdbc6 -Dversion=1.0.0 -Dpackaging=jar-->
		<!-- 3.Put pom entry -->
        <dependency>
		<groupId>com.oracle</groupId>
		<artifactId>ojdbc6</artifactId>
		<version>1.0.0</version>
		</dependency>
		
		<!-- MONGO JDBC JAR -->
		<dependency>
		<groupId>org.mongodb</groupId>
		<artifactId>mongo-java-driver</artifactId>
		<version>3.2.2</version>
		</dependency>
		<!-- Gson dependency for Mongo -->
		<dependency>
		<groupId>com.google.code.gson</groupId>
		<artifactId>gson</artifactId>
		<version>2.6.2</version>
		</dependency>
		
		<!--TEST DEPENDENCIES  Summer Course-->
		<!--  dependency>
    	<groupId>org.java-websocket</groupId>
    	<artifactId>Java-WebSocket</artifactId>
    	<version>1.3.0</version>
		</dependency-->
		<dependency>
    	 <groupId>javax.websocket</groupId>
    	 <artifactId>javax.websocket-api</artifactId>
    	 <version>1.1</version>
		</dependency>
		
		<dependency>
    	 <groupId>javax.enterprise</groupId>
    	 <artifactId>cdi-api</artifactId>
    	 <version>2.0-EDR1</version>
		</dependency>
		
		<dependency>
    	 <groupId>org.jboss.weld.servlet</groupId>
    	 <artifactId>weld-servlet</artifactId>
    	 <version>2.3.4.Final</version>
  		</dependency>
  		
  		<!--GOOGLE VISION DEPENDENCIES -->
  		<dependency>
  			<groupId>com.google.apis</groupId>
  			<artifactId>google-api-services-vision</artifactId>
  			<version>v1-rev2-1.21.0</version>
		</dependency>
		<dependency>
  			<groupId>com.google.api-client</groupId>
  			<artifactId>google-api-client</artifactId>
  			<version>1.21.0</version>
		</dependency>
		
		<!--JAVACV/OPENCV DEPENDENCIES -->
		
		<dependency>
  		 <groupId>org.opencv</groupId>
  		 <artifactId>opencv</artifactId>
  		 <version>2.4.9</version>
  	    </dependency>
  	
  	     <dependency>
          <groupId>org.bytedeco</groupId>
          <artifactId>javacv</artifactId>
          <version>0.9</version>
         </dependency>
         
           <!--JAVACV/OPENCV LOCAL DEPENDENCIES -->
          
          <dependency>
          <groupId>org.opencv.os</groupId>
          <artifactId>windows</artifactId>
          <version>1.0.0</version>
          </dependency>
          
          <dependency>
          <groupId>org.opencv.os</groupId>
          <artifactId>windows_1</artifactId>
          <version>1.0.0</version>
          </dependency>
          
          <dependency>
    		<groupId>org.zeroturnaround</groupId>
    		<artifactId>zt-zip</artifactId>
    		<version>1.8</version>
   		  </dependency>
  		  		
</dependencies>
	
	
  <build>
    <finalName>ImageManager</finalName>
    
    <!--<plugins>
     <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>2.7</version>
        <executions>
          <execution>
            <id>copy-resources</id>
           
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${basedir}/target/ImageManager/META-INF/</outputDirectory>
              <resources>          
                <resource>
                  <directory>src/main/resources</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>              
            </configuration>            
          </execution>
        </executions>
      </plugin>     
      </plugins>-->
    
  </build>
</project>
